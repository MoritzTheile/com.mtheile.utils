package com.lithodat.app.litho.service.other.batch.adapters;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.lithodat.app.domain.PARENTNAME_TOKEN;
import com.lithodat.app.domain.ENTITYNAME_TOKEN;
import com.lithodat.app.litho.service.other.batch.AbstractBatchAdapter;
import com.lithodat.app.litho.service.other.batch.celladapters.AbstractFloatValueCellAdapter;
import com.lithodat.app.litho.service.other.batch.celladapters.AbstractRefCellAdapter;
import com.lithodat.app.litho.service.other.batch.dto.BatchTableDTO.TABLE;
import com.lithodat.app.litho.service.other.batch.dto.RowDTO;
import com.lithodat.app.repository.PARENTNAME_TOKENRepository;
import com.lithodat.app.repository.ENTITYNAME_TOKENRepository;
import com.lithodat.app.service.dto.ENTITYNAME_TOKENDTO;

@Component
public class ENTITYNAME_TOKENBatchAdapter extends AbstractBatchAdapter<ENTITYNAME_TOKENDTO> {

	@Autowired
	private ENTITYNAME_TOKENRepository repository;
	
	@Autowired
	private PARENTNAME_TOKENRepository parentRepository;

	public ENTITYNAME_TOKENBatchAdapter() {

		super(TABLE.ENTITYNAME_TOKEN);
		
		addCellAdapter(new AbstractRefCellAdapter<ENTITYNAME_TOKENDTO>(PARENTNAME_TOKENBatchAdapter.DATAPOINT_NAME, false, TABLE.PARENTNAME_TOKEN) {

			@Override
			public Long getRefIdFromEntity(ENTITYNAME_TOKENDTO entityDTO) {
				return entityDTO.getPARENTNAME_TOKENId();
			}

			@Override
			public String getRefNameFromEntity(ENTITYNAME_TOKENDTO entityDTO) {

				ENTITYNAME_TOKEN entity = repository.getOne(entityDTO.getId());

				PARENTNAME_TOKEN dataPoint = parentRepository.getOne(entity.getPARENTNAME_TOKEN().getId());

				return dataPoint.getDataPoint().getName();
			}

			@Override
			public void setRefIdOnEntity(Long value, ENTITYNAME_TOKENDTO entityDTO) {
				entityDTO.setPARENTNAME_TOKENId(value);
			}

		});
		
        // <!-- CODEGENERATOR_NEEDLE_FOR_ADDING_FIELDS (don't remove) -->\n

	}

	@Override
	protected void setRowDTOId(ENTITYNAME_TOKENDTO entityDTO, RowDTO rowDTO) {
		rowDTO.setId(entityDTO.getId());

	}

	@Override
	protected void setEntityDTOId(RowDTO rowDTO, ENTITYNAME_TOKENDTO entityDTO) {
		entityDTO.setId(rowDTO.getId());
	}

}
